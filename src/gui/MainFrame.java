/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Scanner;
import messagebeans.Transaction;

/**
 *
 * @author Druia
 */
public class MainFrame extends javax.swing.JFrame {
    String file = "output.txt";
    static Transaction transaction = new Transaction();
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        readFile(file);
        addTransaction(transaction);
    }

    private static void readFile(String output) {
        HashMap<String, Transaction> transactionMap = new HashMap<String, Transaction>();
        try
        {
            BufferedReader in = new BufferedReader(new FileReader("output.txt"));
            String str;
            
            int count = 0;
            String key = "";
            while( ( str = in.readLine() ) != null )
            {

                if ( null != str && str.trim().length() == 0 )
                {
                    transactionMap.put( key, transaction);
                    count = -1;
                    transaction = new Transaction();
                }
                else {
                    String arr[] = str.split( " " );
                    key = arr[0];
                    if (count == 0) {
                        transaction.setTicker(arr[1]);  
                    }
                    else if (count == 1) {
                        transaction.setAmount(Double.parseDouble(arr[2]));
                    }
                    else if (count == 2) {
                        transaction.setDirection( arr[3]);
                    }
                    
                }
                count ++;
            }
            transactionMap.put( key, transaction );
            in.close();
        }
        catch( IOException e )
        {
            System.out.println( "Exception" + e.getMessage() );
        }
    }
    
    public void addTransaction(Transaction t) {
        client.ClientController.getInstance().addTransaction(t.getTicker(), t.getAmount(), t.getDirection());
      
    }

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        jMenuItem1.setText("Add Client");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Add Fund");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Add Transaction");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        AddClientFrame frame = new AddClientFrame();
        frame.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        AddFundFrame frame = new AddFundFrame();
        frame.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    // End of variables declaration//GEN-END:variables
}
